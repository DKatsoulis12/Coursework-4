#BlueJ class context
comment0.target=AppGUI
comment0.text=\n\ Write\ a\ description\ of\ JavaFX\ class\ AppGUI\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=AppGUI\ getInstance()
comment1.text=\n\ Provides\ access\ to\ the\ singleton\ instance\ of\ {@link\ AppGUI}.\ If\ no\ instance\ exists,\ one\ is\ created.\n\ This\ method\ ensures\ that\ only\ a\ single\ instance\ of\ {@link\ AppGUI}\ is\ active\ at\ any\ time,\n\ which\ conforms\ with\ the\ Singleton\ design\ pattern.\n\ \n\ @return\ The\ singleton\ instance\ of\ {@link\ AppGUI}.\n
comment10.params=location\ resources
comment10.target=void\ initialize(java.net.URL,\ java.util.ResourceBundle)
comment10.text=\n\ Initializes\ the\ controller\ class.\ This\ method\ is\ automatically\ called\ after\ the\ FXML\ file\ has\ been\ loaded.\n\ It\ sets\ up\ the\ singleton\ instance,\ initializes\ the\ date\ pickers\ with\ default\ values,\ and\ prepares\ the\ initial\ pane\ display.\n\ \n\ @param\ location\ The\ location\ used\ to\ resolve\ relative\ paths\ for\ the\ root\ object,\ or\ null\ if\ the\ location\ is\ not\ known.\n\ @param\ resources\ The\ resources\ used\ to\ localize\ the\ root\ object,\ or\ null\ if\ the\ root\ object\ was\ not\ localized.\n
comment11.params=
comment11.target=void\ initializePanes()
comment2.params=event
comment2.target=void\ goForward(javafx.event.ActionEvent)
comment2.text=\n\ Handles\ the\ action\ of\ moving\ forward\ in\ the\ pane\ display.\ \n\ This\ method\ increments\ the\ current\ pane\ number\ and\ updates\ the\ display\ based\ on\ that\ number.\n\ It\ checks\ the\ date\ range\ validity\ before\ proceeding,\ ensuring\ that\ the\ navigation\ only\ occurs\ if\ the\ date\ range\ is\ valid.\n\ The\ pane\ display\ should\ move\ forward\ in\ a\ circular\ loop,\ meaning\ the\ next\ pane\ after\ pane\ 4\ is\ pane\ 1\n\ \n\ @param\ event\:\ The\ {@link\ ActionEvent}\ that\ triggered\ this\ method\ upon\ click\n
comment3.params=event
comment3.target=void\ goBack(javafx.event.ActionEvent)
comment3.text=\n\ Handles\ the\ action\ of\ moving\ backward\ in\ the\ pane\ display.\n\ This\ method\ decrements\ the\ current\ pane\ number\ and\ updates\ the\ display\ accordingly.\ \n\ Similar\ to\ {@code\ goForward},\ it\ first\ checks\ the\ validity\ of\ the\ date\ range\ and\ only\ allows\ navigation\ if\ the\ date\ range\ is\ valid.\n\ The\ pane\ display\ should\ move\ backward\ in\ a\ circular\ loop,\ meaning\ the\ previous\ pane\ before\ pane\ 1\ is\ pane\ 4\n\ \n\ @param\ event\ The\ {@link\ ActionEvent}\ that\ triggered\ this\ method\ upon\ click\n
comment4.params=
comment4.target=void\ updatePressed()
comment5.params=
comment5.target=java.time.LocalDate\ getStartDate()
comment5.text=\n\ Retrieves\ the\ start\ date\ selected\ by\ the\ user.\n\ \n\ DatePicker\ is\ a\ representation\ of\ a\ calendar\n\ @return\ The\ {@link\ LocalDate}\ representing\ the\ start\ date\ selected\ in\ the\ date\ picker.\n
comment6.params=
comment6.target=java.time.LocalDate\ getEndDate()
comment6.text=\n\ Retrieves\ the\ end\ date\ selected\ by\ the\ user.\n\ \n\ DatePicker\ is\ a\ representation\ of\ a\ calendar\n\ @return\ The\ {@link\ LocalDate}\ representing\ the\ end\ date\ selected\ in\ the\ date\ picker.\n
comment7.params=currentPaneNum
comment7.target=void\ addtoAnchor(int)
comment7.text=\n\ Updates\ the\ display\ to\ show\ the\ pane\ corresponding\ to\ the\ current\ pane\ number.\ It\ removes\ the\ current\ pane\ from\ the\ display\ and\ adds\ the\ new\ one.\n\ This\ method\ dynamically\ updates\ the\ UI\ based\ on\ user\ navigation\ (forward/back).\ \n\ It\ also\ handles\ the\ casting\ of\ {@link\ AppPane}\ to\ {@link\ Pane}\ and\ updates\ button\ visibility\ based\ on\ the\ current\ pane.\n\ This\ is\ to\ make\ sure\ that\ when\ the\ new\ pane\ is\ added,\ it\ really\ is\ a\ Pane\ instance.\n\ \n\ @param\ currentPaneNum\ The\ number\ representing\ the\ current\ pane\ to\ be\ displayed.\ Used\ to\ retrieve\ the\ corresponding\ {@link\ AppPane}\n\ from\ {@code\ panesDisplay}.\n
comment8.params=
comment8.target=void\ updateButtonVisibility()
comment9.params=stage
comment9.target=void\ start(javafx.stage.Stage)
comment9.text=\n\ The\ start\ method\ is\ the\ main\ entry\ point\ for\ every\ JavaFX\ application.\ \n\ It\ is\ called\ after\ the\ init()\ method\ has\ returned\ and\ after\ \n\ the\ system\ is\ ready\ for\ the\ application\ to\ begin\ running.\n\n\ @param\ \ stage\ the\ primary\ stage\ for\ this\ application.\n
numComments=12
