#BlueJ class context
comment0.target=ThirdPaneTest
comment1.params=
comment1.target=void\ setUp()
comment10.params=
comment10.target=void\ testRightButtonWorks()
comment10.text=\n\ Testing\ the\ right\ button\ on\ the\ stats\ pane\ correctly\ functions\ by\ using\ the\ currentStatNum\ value\ and\ calling\ \n\ the\ goRight\ ActionEvent\ handler\ method\ linked\ to\ the\ right\ button\ so\ as\ to\ increment\ the\ currentStatNum\ value.\n
comment11.params=
comment11.target=void\ testLeftButtonWrapsAroundWorks()
comment11.text=\n\ Testing\ the\ left\ button\ on\ the\ stats\ pane\ correctly\ "wraps\ around"\ such\ that\ when\ the\ user\ is\ on\ the\ first\ \n\ stat\ and\ clicks\ the\ left\ button,\ the\ user\ is\ presented\ with\ the\ last\ stat.\n\ Using\ the\ currentStatNum\ value\ and\ calling\ the\ goLeft\ ActionEvent\ handler\ method\ so\ as\ to\ decrement\ the\ \n\ currentStatNum\ value.\n
comment12.params=
comment12.target=void\ testRightButtonWrapsAroundWorks()
comment12.text=\n\ Testing\ the\ right\ button\ on\ the\ stats\ pane\ correctly\ "wraps\ around"\ such\ that\ when\ the\ user\ is\ on\ the\ last\n\ stat\ and\ clicks\ the\ right\ button,\ the\ user\ is\ presented\ with\ the\ first\ stat.\n
comment13.params=
comment13.target=void\ testLeftButtonWorks()
comment13.text=\n\ Testing\ the\ left\ button\ on\ the\ stats\ pane\ correctly\ functions.\n
comment14.params=
comment14.target=void\ tearDown()
comment2.params=
comment2.target=void\ testGenerateTotalDeathsLabelEverythingAvailable()
comment2.text=\n\ This\ function\ tests\ if\ the\ total\ Deaths\ given\ a\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ totalDeaths\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ total\ deaths\ generated\ are\ correct\ when\ there\ is\ data\ available\ every\ single\ day\ between\ the\ start\ and\ end\ date\n
comment3.params=
comment3.target=void\ testGenerateTotalDeathsLabelNotEverythingAvailable()
comment3.text=\n\ This\ function\ tests\ if\ the\ total\ Deaths\ error\ message\ given\ another\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ totalDeaths\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ total\ deaths\ generated\ are\ correct\ when\ data\ is\ NOT\ available\ for\ every\ single\ day\ between\ the\ start\ and\ end\ date\n\ This\ should\ display\ an\ error\ message\ saying\ that\ the\ data\ base\ does\ not\ fully\ cover\ selected\ period\n
comment4.params=
comment4.target=void\ testGenerateGMR1LabelEverythingAvailable()
comment4.text=\n\ This\ function\ tests\ if\ the\ average\ retail\ and\ recreation\ GMR\ data\ given\ a\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ average\ retail\ and\ recreation\ GMR\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ average\ retail\ and\ recreation\ GMR\ generated\ are\ correct\ when\ there\ is\ data\ available\ every\ single\ day\ between\ the\ start\ and\ end\ date\n
comment5.params=
comment5.target=void\ testGenerateGMR1LabelNotEverythingAvailable()
comment5.text=\n\ This\ function\ tests\ if\ the\ average\ retail\ and\ recreation\ GMR\ error\ message\ given\ another\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ average\ retail\ and\ recreation\ GMR\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ average\ retail\ and\ recreation\ GMR\ generated\ are\ correct\ when\ data\ is\ NOT\ available\ for\ every\ single\ day\ between\ the\ start\ and\ end\ date\n\ This\ should\ display\ an\ error\ message\ saying\ that\ the\ data\ base\ does\ not\ fully\ cover\ selected\ period\n
comment6.params=
comment6.target=void\ testAverageCasesPerDayEverythingAvailable()
comment6.text=\n\ This\ function\ tests\ if\ the\ average\ cases\ per\ day\ data\ given\ a\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ average\ cases\ per\ day\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ average\ cases\ per\ day\ \ generated\ are\ correct\ when\ there\ is\ data\ available\ every\ single\ day\ between\ the\ start\ and\ end\ date\n
comment7.params=
comment7.target=void\ testAverageCasesPerDayNotEverythingAvailable()
comment7.text=\n\ This\ function\ tests\ if\ the\ average\ cases\ per\ day\ error\ message\ given\ another\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ average\ cases\ per\ day\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ average\ cases\ per\ day\ generated\ are\ correct\ when\ data\ is\ NOT\ available\ for\ every\ single\ day\ between\ the\ start\ and\ end\ date\n\ This\ should\ display\ an\ error\ message\ saying\ that\ the\ data\ base\ does\ not\ fully\ cover\ selected\ period\n
comment8.params=
comment8.target=void\ testGenerateGMR2LabelEverythingAvailable()
comment8.text=\n\ This\ function\ tests\ if\ the\ average\ transit\ and\ stations\ GMR\ data\ given\ a\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ average\ transit\ and\ stations\ GMR\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ average\ transit\ and\ stations\ GMR\ generated\ are\ correct\ when\ there\ is\ data\ available\ every\ single\ day\ between\ the\ start\ and\ end\ date\n
comment9.params=
comment9.target=void\ testGenerateGMR2LabelNotEverythingAvailable()
comment9.text=\n\ This\ function\ tests\ if\ the\ average\ transit\ and\ stations\ GMR\ error\ message\ given\ another\ start\ date\ and\ and\ end\ Date\ is\ correctly\ generated\ and\ rendered\ onto\ the\ Stats\ Panel\n\ It\ uses\ the\ JUnit\ Test\ representative\ function\ to\ generate\ the\ average\ transit\ and\ stations\ GMR\ and\ then\ gets\ the\ label's\ text\ for\ comparison\n\ This\ function\ tests\ if\ the\ average\ transit\ and\ stations\ GMR\ generated\ are\ correct\ when\ data\ is\ NOT\ available\ for\ every\ single\ day\ between\ the\ start\ and\ end\ date\n\ This\ should\ display\ an\ error\ message\ saying\ that\ the\ data\ base\ does\ not\ fully\ cover\ selected\ period\n
numComments=15
